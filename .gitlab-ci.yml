stages:
  - test
  - build
  - deploy

test:pytest: &test
  stage: test
  image: ghcr.io/binkhq/python:3.9
  before_script:
    - pipenv install --dev --system --deploy --ignore-pipfile
  script:
    - pytest cyclops/tests --cov=cyclops

test:complexity:
  <<: *test
  script:
  - pip install xenon
  - xenon --max-average A --max-modules B --max-absolute B .

test:style:
  <<: *test
  script:
  - flake8
  - black --line-length=120 --check .

build:master: &build
  stage: build
  needs: ["test:pytest", "test:complexity", "test:style"]
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - export CTAG=$(echo -n "$CI_PIPELINE_CREATED_AT" | sed s/\://g)
  script:
    - docker build --pull --tag "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG" .
    - docker push "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
  only:
    - master

deploy:prod: &deploy
  stage: deploy
  needs: ["build:master"]
  image: binkcore.azurecr.io/tagbot:latest
  environment:
    name: prod
  before_script:
    - export CTAG=$(echo -n "$CI_PIPELINE_CREATED_AT" | sed s/\://g)
  script:
    - tagbot
      --username "$CI_REGISTRY_USER"
      --password "$CI_REGISTRY_PASSWORD"
      --source "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
      --tag "$CI_ENVIRONMENT_NAME-$CTAG"
    - tagbot
      --username "$CI_REGISTRY_USER"
      --password "$CI_REGISTRY_PASSWORD"
      --source "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
      --tag "$CI_ENVIRONMENT_NAME"
  only:
    - master
